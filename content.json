{"meta":{"title":"Annie","subtitle":"ah~ha,时间","description":"","author":"Annie Chou","url":"https://aiyuzhou.github.io"},"pages":[{"title":"tags","date":"2016-12-15T04:19:32.000Z","updated":"2016-12-15T05:26:29.000Z","comments":true,"path":"tags/index.html","permalink":"https://aiyuzhou.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"写在最前面","slug":"写在最前面","date":"2016-12-15T08:29:14.000Z","updated":"2016-12-15T09:26:00.000Z","comments":true,"path":"2016/12/15/写在最前面/","link":"","permalink":"https://aiyuzhou.github.io/2016/12/15/写在最前面/","excerpt":"","text":"终于，我开始写博客了 写在最前面 除去前两篇的测试文章，这大概算是我非常正式的写在自己的博客里的第一篇文章了，为什么说是大概呢！！！原因是： 我很早很早之前就想开始写博客了，至于多早，应该是我刚刚入门前端的时候吧，那个时候每次在网上搜寻学习过程中遇到的一些问题时，见到不少形式的博客，有写在CSDN的，有博客园的，有简书的，有github的，于是啊，我就萌生了自己写一个博客系统的想法，现在想想真是可笑啊哈哈哈哈哈哈。。。那时用的是javaweb，最后的结果呢，就是写了些静态的漂亮的页面，简单的交互：有阅读全文跳转到整章阅读，在article页面，阅读全文则全部文章的wrap div设置为display：none,单个文章的wrap div设置为display：block，然后js将内容换位点击那篇文章的内容。恩，然后我意识到自己一个人写一个系统不现实，我开始动手写的时候就是脑子一热就开始写了，完全没有考虑到一个博客系统项目架构，模块，数据库存储，到最后部署上线不是我一个刚刚入门的小菜鸟能搞定的，终于认清楚以后，就在这里停下来。 我开始在印象笔记里零零散散的记一些知识，也在电脑创建过文件夹用markdown来记笔记，太零散了，整理的时候真希望有个标签一点就把我要的文章找出来。 所以，在这么长的时间过去之后，我快毕业了，我终于决定搭建我的博客，对，就是今天，斟酌一番后，决定用最简易的github Pages和hexo来搭建博客（之前非常蠢得准备自己写一个博客系统的时候，还没有开始用github，捂脸逃），选了个自己喜欢的主题，就这样我的真正的博客开通了。 记录目前生活状态我是Annie Chou，是一名程序媛，现在就读于西安电子科技大学，于明年7月毕业。目前在北京一家智能硬件创业公司实习，也打算继续留在这里工作。 希望自己可以在前端的路上摸爬打滚越滚越远！","categories":[],"tags":[]},{"title":"linux命令 chmod 755的含义","slug":"linux命令_chmod_755的含义","date":"2016-12-15T04:38:32.000Z","updated":"2016-12-15T05:27:41.000Z","comments":true,"path":"2016/12/15/linux命令_chmod_755的含义/","link":"","permalink":"https://aiyuzhou.github.io/2016/12/15/linux命令_chmod_755的含义/","excerpt":"","text":"linux命令 chmod 755的含义chmod是Linux下设置文件权限的命令，后面的数字表示不同用户或用户组的权限。一般是三个数字：第一个数字表示文件所有者的权限第二个数字表示与文件所有者同属一个用户组的其他用户的权限第三个数字表示其它用户组的权限。 权限分为三种：读（r=4），写（w=2），执行（x=1） 。 综合起来还有可读可执行（rx=5=4+1）、可读可写（rw=6=4+2）、可读可写可执行(rwx=7=4+2+1)。 所以，chmod 755 设置用户的权限为： 1.文件所有者可读可写可执行 –72.与文件所有者同属一个用户组的其他用户可读可执行 –53.其它用户组可读可执行 –5","categories":[],"tags":[{"name":"chmod","slug":"chmod","permalink":"https://aiyuzhou.github.io/tags/chmod/"}]},{"title":"angular学习笔记（一）—— 创建自定义指令","slug":"angular学习笔记（一）——_创建自定义指令","date":"2016-12-15T04:19:32.000Z","updated":"2016-12-15T05:19:06.000Z","comments":true,"path":"2016/12/15/angular学习笔记（一）——_创建自定义指令/","link":"","permalink":"https://aiyuzhou.github.io/2016/12/15/angular学习笔记（一）——_创建自定义指令/","excerpt":"","text":"angular学习笔记（一）—— 创建自定义指令使用驼峰法来命名一个指令， runoobDirective, 但在使用它时需要以 - 分割, runoob-directive:实例： &lt;runoob-directive&gt;&lt;/runoob-directive&gt; &lt;script&gt; var app = angular.module(&quot;myApp&quot;, []); app.directive(&quot;runoobDirective&quot;, function() { return { template : &quot;&lt;h1&gt;自定义指令!&lt;/h1&gt;&quot; }; }); &lt;/script&gt; 元素名 &lt;runoob-directive&gt;&lt;/runoob-directive&gt; 属性 &lt;div runoob-directive&gt;&lt;/div&gt; 类名 &lt;div class=&quot;runoob-directive&quot;&gt;&lt;/div&gt; 注释 &lt;!-- directive: runoob-directive --&gt; 限制使用你可以限制你的指令只能通过特定的方式来调用。 实例 通过添加 restrict 属性,并设置只值为 “A”, 来设置指令只能通过属性的方式来调用: var app = angular.module(&quot;myApp&quot;, []); app.directive(&quot;runoobDirective&quot;, function() { return { restrict : &quot;A&quot;, template : &quot;&lt;h1&gt;自定义指令!&lt;/h1&gt;&quot; }; }); restrict 值可以是以下几种: E 作为元素名使用 A 作为属性使用 C 作为类名使用 M 作为注释使用 restrict 默认值为 EA, 即可以通过元素名和属性名来调用指令。","categories":[],"tags":[{"name":"angular","slug":"angular","permalink":"https://aiyuzhou.github.io/tags/angular/"}]}]}